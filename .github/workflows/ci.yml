name: CI
on: [push]
jobs:
  backend-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/backend
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install pre-commit
        run: |
          pip install pre-commit
      - name: Lint
        run: pre-commit run -a

  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/backend
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m venv ${{ github.workspace }}/.venv
          source ${{ github.workspace }}/.venv/bin/activate
          python -m pip install --verbose --upgrade pip pipenv
          pipenv sync --verbose --dev
      - name: Run tests
        env:
          VIRTUAL_ENV: ${{ github.workspace }}/.venv
          PATH: ${{ github.workspace }}/.venv/bin
          PIPENV_VERBOSITY: -1
        run: |
          export PYTHONPATH=${PYTHONPATH}:${{ github.workspace }}
          pipenv run tests
      - name: Upload coverage file
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ${{ github.workspace }}/backend/.coverage

  backend-coverage:
    runs-on: ubuntu-latest
    needs: backend-tests
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: python -m pip install --upgrade coverage
      - name: Download coverage
        id: download
        uses: actions/download-artifact@v3
        with:
          name: coverage
      - name: Validate coverage
        env:
          COVERAGE_FILE: ${{steps.download.outputs.download-path}}/.coverage
        run: |
          python -m coverage html --skip-empty
          python -m coverage report --fail-under=80
      - name: Upload HTML report if check failed.
        uses: actions/upload-artifact@v2
        with:
          name: html-report
          path: htmlcov
